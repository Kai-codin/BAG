{"version":3,"file":"voxEditor.js","sourceRoot":"","sources":["../src/voxEditor.ts"],"names":[],"mappings":";AAAA,qEAAqE;;AAErE,yCAAyC;AAEzC,qCAAyD;AACzD,yCAAsC;AAEtC,sDAAsD;AACtD;IAAA;IAuDA,CAAC;IA9CiB,cAAI,GAAlB;QAEI,cAAG,CAAC,EAAE,CAAC,OAAO,EAAE;YAEZ,SAAS,CAAC,MAAM,GAAG,IAAI,wBAAa,CAAC;gBACjC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG;aAC1B,CAAC,CAAC;YAEH,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,GAAG,qBAAqB,CAAC,CAAC;YAExE,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,GAAG,qBAAqB,CAAC,CAAC;YAE3D,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,cAAM,OAAA,SAAS,CAAC,MAAM,GAAG,SAAS,EAA5B,CAA4B,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,cAAG,CAAC,EAAE,CAAE,mBAAmB,EAAE,cAAM,OAAA,cAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAE,CAAA;IACnD,CAAC;IAEa,iBAAO,GAArB,UAAsB,QAAkB;QAEpC,SAAS,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC5C,SAAS,CAAC,MAAM,GAAK,IAAI,qBAAS,EAAE,CAAC;QAErC,IAAI,WAAW,GAAG,GAAG,CAAC,OAAO,CAAqB,cAAc,CAAC,CAAC;QAElE,KAAK,IAAI,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,WAAW,EAC5C;YACI,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,KAAK,GAAK,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAEhD,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;YAC7B,OAAO,CAAC,SAAS,GAAQ,OAAI,KAAK,OAAG,CAAC;YAEtC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SACpC;QAED,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAEvC,IAAI,YAAY,GAAG,GAAG,CAAC,OAAO,CAAqB,eAAe,CAAC,CAAC;QAEpE,YAAY,CAAC,UAAU,GAAG,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,cAAc,EAAE,EAAnB,CAAmB,CAAC;QACpD,YAAY,CAAC,MAAM,GAAO,UAAA,EAAE;YAExB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACpB,CAAC,CAAA;IACL,CAAC;IACL,gBAAC;AAAD,CAAC,AAvDD,IAuDC;AAvDY,8BAAS;AAyDtB,uBAAuB;AACvB,SAAS,CAAC,IAAI,EAAE,CAAC","sourcesContent":["/** Rail Announcements Generator. By Roy Curtis, MIT license, 2018 */\r\n\r\n/// <reference path=\"../../js/rag.d.ts\"/>\r\n\r\nimport {app, BrowserWindow, webContents} from 'electron';\r\nimport {Captioner} from \"./captioner\";\r\n\r\n/** Main class of the entire vox editor application */\r\nexport class VoxEditor\r\n{\r\n    /** Gets the voice bank generator, which turns phrase data into a set of IDs */\r\n    public static banker   : Captioner;\r\n    /** Gets the database manager, which holds phrase, station and train data */\r\n    public static database : Database;\r\n\r\n    public static window?  : BrowserWindow;\r\n\r\n    public static main() : void\r\n    {\r\n        app.on('ready', () =>\r\n        {\r\n            VoxEditor.window = new BrowserWindow({\r\n                width: 800, height: 600\r\n            });\r\n\r\n            VoxEditor.window.loadURL('file://' + __dirname + '\\\\views\\\\index.html');\r\n\r\n            console.log('file://' + __dirname + '\\\\views\\\\index.html');\r\n\r\n            VoxEditor.window.on('close', () => VoxEditor.window = undefined);\r\n        });\r\n\r\n        app.on( 'window-all-closed', () => app.quit() )\r\n    }\r\n\r\n    public static oldmain(dataRefs: DataRefs) : void\r\n    {\r\n        VoxEditor.database = new Database(dataRefs);\r\n        VoxEditor.banker   = new Captioner();\r\n\r\n        let phrasesList = DOM.require <HTMLUListElement> ('#phrasesList');\r\n\r\n        for (let key in VoxEditor.banker.captionBank)\r\n        {\r\n            let element = document.createElement('li');\r\n            let value   = VoxEditor.banker.captionBank[key];\r\n\r\n            element.dataset['key'] = key;\r\n            element.innerText      = `\"${value}\"`;\r\n\r\n            phrasesList.appendChild(element);\r\n        }\r\n\r\n        phrasesList.classList.remove('hidden');\r\n\r\n        let folderPicker = DOM.require <HTMLInputElement> ('#folderPicker');\r\n\r\n        folderPicker.ondragover = ev => ev.preventDefault();\r\n        folderPicker.ondrop     = ev =>\r\n        {\r\n            console.log(ev);\r\n        }\r\n    }\r\n}\r\n\r\n// Execute electron app\r\nVoxEditor.main();"]}